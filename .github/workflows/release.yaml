on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Build
      run: dotnet build --configuration Release /p:Version=${VERSION}
    - name: Test
      run: dotnet test --configuration Release /p:Version=${VERSION} --no-build

    # Axis.Luna.Extensions
    - name: Pack
      run: dotnet pack ./Axis.Luna.Extensions/Axis.Luna.Extensions.csproj --configuration Release /p:Version=${VERSION} --output .
    - name: Push
      run: dotnet nuget push Axis.Luna.Extensions.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_TOKEN }}

    # Axis.Luna.Common
    - name: Pack
      run: dotnet pack ./Axis.Luna.Common/Axis.Luna.Common.csproj --configuration Release /p:Version=${VERSION} --output .
    - name: Push
      run: dotnet nuget push Axis.Luna.Common.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_TOKEN }}

    # Axis.Luna.FInvoke
    - name: Pack
      run: dotnet pack ./Axis.Luna.FInvoke/Axis.Luna.FInvoke.csproj --configuration Release /p:Version=${VERSION} --output .
    - name: Push
      run: dotnet nuget push Axis.Luna.FInvoke.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_TOKEN }}