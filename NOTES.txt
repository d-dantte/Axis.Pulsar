
2016-07-06 =======================================================
1. Review the 'Any' production-combiner in the grammer namespace. it currently repeats parsing unnecessarily
2. I have found that production that has a MinCardinality of 0 must be in a sequence preceeded or succeeded 
   by some other production whose MinCardinality is greater than 0 - else if such a setup is within another
   production whose MaxCardinality is unbounded, you'll have an infinite loop on your hands.
3. The Language.xsd document is grossly outdated and needs to be updated - although i dont use it to verify
   the actual language anymore.


2022-04-17 ======================================================
1. Combine contents of the Recognizers and Parsers namespaces back together.
2. 2 successful result variants should exist:
	a. SymbolSuccess, that represents the successful parsing of a single symbol.
	b. SymbolGroupSuccess, that represetns the successful parsing of a group of symbols
	c. All parse methods will now consider the recognition threshold.
3. Make sure that the Grammar rules and SymbolExpressions all validate Cardinality against RecognitionThreshold.
   This ensures that we will never have a scenario where the cardinality passes and the threshold doesn't.

   After much rumination, this seems to be a bad idea. I'm going to look at videos on how to implement parsers,
   I should get better ideas about implementing that partial parsing feature from those.
   ps: get rid of the "RecognitionThreshold" feature.